services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - appnet
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: 512M

  db: # Correct service name to 'db'
    image: postgres:15
    env_file:
      - ./.env # Load common env vars
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose postgres port for potential direct access/debugging
    restart: unless-stopped
    networks:
      - appnet
    # Add resource limits to prevent container resource starvation
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    working_dir: /app
    ports:
      - "5173:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - appnet
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M

networks:
  appnet:
    driver: bridge

volumes:
  postgres_data: # Define the named volume