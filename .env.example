# Decision Points AI - Example Environment Variables
# =================================================
# Copy this file to .env and fill in ALL required values below.
# This configuration is primarily intended for the local Docker development setup.

# --- Core Backend Settings ---

# [REQUIRED] Flask Secret Key: Used for session security and cryptographic signing.
# Generate a strong random key using the command:
# python -c "import secrets; print(secrets.token_hex(32))"
# Replace the placeholder below with your generated key.
SECRET_KEY=your_strong_random_secret_key_here

# [REQUIRED] Google Gemini API Key: Needed for all AI agent interactions, including the Orchestrator panel.
# Obtain your key from Google AI Studio: https://ai.google.dev/gemini-api/docs/api-key
# Replace the placeholder below with your actual API key.
GEMINI_API_KEY=your_google_gemini_api_key_here

# [OPTIONAL] Google Cloud Project ID: Required by the FreelanceTaskAgent for certain Google Cloud interactions.
# Obtain your Project ID from the Google Cloud Console: https://console.cloud.google.com/
GCP_PROJECT_ID=your_gcp_project_id_here


# [OPTIONAL] Brave Search API Key: Required by the WebSearchAgent for performing web searches.
# Obtain your key from Brave Search API: https://brave.com/search/api/
BRAVE_API_KEY=your_brave_search_api_key_here

# --- Agent Model Configuration ---
# Specify the Gemini models to use for different agents.
# Find available model names in the Google Gemini documentation.
# Example: 'gemini-1.5-flash', 'gemini-1.5-pro-latest'

# [REQUIRED] Model for the primary Orchestrator agent (handles user interaction via WebSocket panel)
# Defaulting to 'gemini-1.5-flash' is a reasonable starting point.
ORCHESTRATOR_MODEL=gemini-1.5-flash

# Optional: Override models for specific background workflow agents if needed.
# If commented out or not set, they might default to a system-wide setting or potentially the ORCHESTRATOR_MODEL.
# ACTION_AGENT_MODEL=gemini-1.5-flash
# GUIDE_AGENT_MODEL=gemini-1.5-flash
# ARCHON_AGENT_MODEL=gemini-1.5-flash

# --- Autonomous Income Workflow Agent Settings ---

# [OPTIONAL] OpenAI API Key: Potentially used by the Market Research Agent for specific tasks.
# Obtain your key from OpenAI: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# [REQUIRED] Firecrawl API Key: Used by the Market Research Agent for website scraping and data extraction.
# Obtain your key from Firecrawl: https://www.firecrawl.dev/
FIRECRAWL_API_KEY=your_firecrawl_api_key_here

# [OPTIONAL] Competitor Search Provider: Specify the search engine for competitor analysis (e.g., 'google', 'bing'). Defaults if not set.
COMPETITOR_SEARCH_PROVIDER=google

# [CONDITIONAL] Exa API Key: Required if using Exa Search within the Market Research Agent.
# Obtain your key from Exa: https://exa.ai/
EXA_API_KEY=your_exa_api_key_here

# [CONDITIONAL] Perplexity API Key: Required if using Perplexity AI within the Market Research Agent.
# Obtain your key from Perplexity: https://docs.perplexity.ai/docs/getting-started
PERPLEXITY_API_KEY=your_perplexity_api_key_here

# [REQUIRED] Market Research Agent URL: Endpoint for the Workflow Manager to communicate with the Market Research Agent.
# Example: http://market-research-agent:5001 (if running as separate service) or http://localhost:5001 (if running locally)
MARKET_RESEARCH_AGENT_URL=http://localhost:5001

# [REQUIRED] Improvement Agent URL: Endpoint for the Workflow Manager to communicate with the Improvement Agent.
# Example: http://improvement-agent:5002 or http://localhost:5002
IMPROVEMENT_AGENT_URL=http://localhost:5002

# [REQUIRED] Branding Agent URL: Endpoint for the Workflow Manager to communicate with the Branding Agent.
# Example: http://branding-agent:5003 or http://localhost:5003
BRANDING_AGENT_URL=http://localhost:5003

# [REQUIRED] Deployment Agent URL: Endpoint for the Workflow Manager to communicate with the Deployment Agent.
# Example: http://deployment-agent:5004 or http://localhost:5004
DEPLOYMENT_AGENT_URL=http://localhost:5004

# [OPTIONAL] Agent Timeout Seconds: Maximum time (in seconds) the Workflow Manager will wait for a response from a sub-agent.
# Defaults to a reasonable value (e.g., 300) if not set.
AGENT_TIMEOUT_SECONDS=300

# [CONDITIONAL] Deployment Provider API Keys: Add keys required by the Deployment Agent based on your chosen provider(s).
# Examples:
# VERCEL_API_TOKEN=your_vercel_api_token_here
# CLOUDFLARE_API_TOKEN=your_cloudflare_api_token_here
# NETLIFY_AUTH_TOKEN=your_netlify_auth_token_here
# AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AZURE_CLIENT_ID=your_azure_client_id
# AZURE_CLIENT_SECRET=your_azure_client_secret
# AZURE_TENANT_ID=your_azure_tenant_id
# AZURE_SUBSCRIPTION_ID=your_azure_subscription_id

# --- Frontend Settings ---

# [REQUIRED] API Base URL: The URL the frontend UI (running in your browser) uses
# to communicate with the backend API service.
# For the default Docker development setup (docker-compose.dev.yml),
# this MUST be http://localhost:5000 as the backend container's port 5000
# is mapped to port 5000 on your host machine.
VITE_API_BASE_URL=http://localhost:5000

# =================================================
# End of Example Environment Variables
# =================================================