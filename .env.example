# Consolidated Example Environment Variables for Decision Points AI Agent System
# ==========================================================================
# This file combines example variables from:
#   - backend/.env.example (Development/Local)
#   - backend/.env.production.template (Production Template)
#   - frontend/.env.example (Frontend Development)
#
# Copy this file to .env and fill in the appropriate values for your deployment.
# Refer to the original files and comments for detailed explanations.
# ==========================================================================

# ==========================================================================
# Backend - Development/Local Settings (from backend/.env.example)
# ==========================================================================
# See original file for detailed comments on [LOCAL], [SAAS], [BOTH] requirements.

# --- BILLING & DEPLOYMENT MODE ---
# [BOTH] Controls whether Stripe subscription checks are enforced.
#   - Set BILLING_REQUIRED=false for local/self-hosted development (no billing, all features enabled).
#   - Set BILLING_REQUIRED=true for hosted/SaaS deployments (billing enforced, users must subscribe).
BILLING_REQUIRED=false

# --- GOOGLE CLOUD DATASTORE & CREDENTIALS ---
# [SAAS] Google Cloud Datastore and credentials are ONLY required for hosted/SaaS deployments (BILLING_REQUIRED=true).
#   - In local/self-hosted mode (BILLING_REQUIRED=false), the backend uses a local in-memory database.

# --- SECRET KEY (CRITICAL) ---
# [BOTH] SECRET_KEY is used for cryptographic signing (sessions, tokens, etc.).
#   - Must be a strong, random value.
#   - Recommended generation (Linux/macOS): python -c "import secrets; print(secrets.token_hex(32))"
#   - Never share or commit your real SECRET_KEY.
SECRET_KEY=your_secret_key_here # Development/Local Example

# --- API Keys for External Services ---

# [BOTH] Google Gemini API Key (required for AI agents)
#   - Create at: https://ai.google.dev/gemini-api/docs/api-key
GEMINI_API_KEY=your_google_api_key_here # Development/Local Example

# ==========================================================================
# Frontend - Development Settings (from frontend/.env.example)
# ==========================================================================
# Deployment mode for the frontend.
# Determines behavior for features like signup.
# Set to 'cloud' for the cloud-hosted version (enables features like free tier signup).
# Leave blank or set to anything else for the self-hosted version (standard open signup).
VITE_DEPLOYMENT_MODE=

# ==========================================================================
# End of Consolidated Example Environment Variables
# ==========================================================================

# --- Agent Settings ---
# ACTION_AGENT_MODEL specifies the model used by the Action Agent.
# If not set, the system default will be used.
# Example: gemini-2.5-flash-preview-04-17
ACTION_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Production Template (Overlaps with Dev)

# GUIDE_AGENT_MODEL specifies the model used by the Guide Agent.
# If not set, the system default will be used.
# Example: gemini-2.5-flash-preview-04-17
GUIDE_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Production Template (Overlaps with Dev)

# ARCHON_AGENT_MODEL specifies the model used by the Archon Agent.
# If not set, the system default will be used.
# Example: gemini-2.5-flash-preview-04-17
ARCHON_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Production Template (Overlaps with Dev)

# [SAAS] Stripe API Key (required for billing in SaaS/hosted mode)
#   - Create at: https://dashboard.stripe.com/apikeys
#   - Only required if BILLING_REQUIRED=true
STRIPE_API_KEY=your_stripe_api_key_here # Development/Local Example (if BILLING_REQUIRED=true)

# [SAAS] Stripe Webhook Secret (required for SaaS/hosted mode)
#   - Get from Stripe dashboard (Developers > Webhooks)
#   - Only required if BILLING_REQUIRED=true
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here # Development/Local Example (if BILLING_REQUIRED=true)

# [SAAS/OPTIONAL] PayPal API Key/Secret (if using PayPal for SaaS payments)
PAYPAL_API_KEY=your_paypal_api_key_here
PAYPAL_API_SECRET=your_paypal_api_secret_here

# [OPTIONAL] Shopify API Key/Secret (for e-commerce integrations)
SHOPIFY_API_KEY=your_shopify_api_key_here
SHOPIFY_API_SECRET=your_shopify_api_secret_here

# [OPTIONAL] Gumroad API Key (for digital product sales)
GUMROAD_API_KEY=your_gumroad_api_key_here

# [OPTIONAL] MailChimp API Key (for email marketing)
MAILCHIMP_API_KEY=your_mailchimp_api_key_here

# [OPTIONAL] SendGrid API Key (for transactional emails)
SENDGRID_API_KEY=your_sendgrid_api_key_here

# [OPTIONAL] AWS Access Keys (for cloud hosting, S3, or backups)
AWS_ACCESS_KEY_ID=your_aws_access_key_id_here # Development/Local Example
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here # Development/Local Example

# --- Application Configuration ---

# [BOTH] Set to your preferred logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO # Development/Local Example

# [BOTH] Storage path for Decision Points data (default: ./decision_points_data)
STORAGE_PATH=./decision_points_data

# --- Agent Model Selection ---

# [BOTH] ACTION_AGENT_MODEL specifies the model used by the Action Agent.
#   - Example: gemini-pro, gpt-4o
ACTION_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Development/Local Example

# [BOTH] GUIDE_AGENT_MODEL specifies the model used by the Guide Agent.
GUIDE_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Development/Local Example

# [BOTH] ARCHON_AGENT_MODEL specifies the model used by the Archon Agent.
ARCHON_AGENT_MODEL=gemini-2.5-flash-preview-04-17 # Development/Local Example

# ==========================================================================
# Backend - Production Template Settings (from backend/.env.production.template)
# ==========================================================================
# These are templates/placeholders for a production environment.
# Replace values as needed for your actual production deployment.

# --- Application Settings ---
FLASK_APP=app.py
FLASK_ENV=development
PORT=5000
DEBUG=false
LOG_LEVEL=INFO # Production Template (Overlaps with Dev, confirm desired level)
LOG_FILE=/var/log/decision-points/app.log

# --- Security Settings ---
# Generate strong random keys for production:
# python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=replace_with_strong_random_key # Production Template (Overlaps with Dev)
JWT_SECRET_KEY=replace_with_strong_random_key
ENCRYPTION_KEY=replace_with_strong_random_key

# CORS settings
ALLOWED_ORIGINS=http://localhost:8000

# Rate limiting
RATELIMIT_DEFAULT=125 per day, 15 per hour
RATELIMIT_STORAGE_URL=redis://localhost:6379/0

# --- Database Settings ---
DB_TYPE=postgres
DB_NAME=decision_points
DB_USER=db_user
DB_PASSWORD=replace_with_strong_password
DB_HOST=localhost
DB_PORT=5432
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# --- Cache Settings ---
CACHE_TYPE=redis
CACHE_REDIS_URL=redis://localhost:6379/0
CACHE_DEFAULT_TIMEOUT=300

# --- API Keys ---
GOOGLE_API_KEY=your_google_api_key # Production Template (Overlaps with Dev)
STRIPE_API_KEY=your_stripe_api_key # Production Template (Overlaps with Dev)
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret # Production Template (Overlaps with Dev)
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# --- Analytics Settings ---
ANALYTICS_GA_ENABLED=true
ANALYTICS_GA_MEASUREMENT_ID=G-XXXXXXXXXX
ANALYTICS_GA_API_SECRET=your_ga_api_secret
ANALYTICS_MIXPANEL_ENABLED=false
ANALYTICS_MIXPANEL_TOKEN=your_mixpanel_token
ANALYTICS_INTERNAL_ENABLED=true
ANALYTICS_INTERNAL_STORAGE=file
ANALYTICS_INTERNAL_FILE_PATH=/var/log/decision-points/analytics.log
ANALYTICS_ANONYMIZE_IP=true
ANALYTICS_RESPECT_DNT=true
ANALYTICS_DATA_RETENTION_DAYS=90

# --- Backup Settings ---
BACKUP_DIR=/var/backups/decision-points
BACKUP_RETENTION_DAYS=30
BACKUP_FREQUENCY=daily
BACKUP_ENCRYPT_BACKUPS=true
BACKUP_CLOUD_PROVIDER=s3
BACKUP_CLOUD_BUCKET=your-backup-bucket
BACKUP_CLOUD_PREFIX=backups/

# AWS credentials for backups (if using S3)
AWS_ACCESS_KEY_ID=your_aws_access_key # Production Template (Overlaps with Dev)
AWS_SECRET_ACCESS_KEY=your_aws_secret_key # Production Template (Overlaps with Dev)
AWS_DEFAULT_REGION=us-west-2

# GCP credentials for backups (if using GCS)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# --- Legal Settings ---
LEGAL_COMPANY_NAME=Your Company Name
LEGAL_COMPANY_ADDRESS=Your Company Address, City, Country
LEGAL_COMPANY_EMAIL=privacy@example.com
LEGAL_COMPANY_WEBSITE=https://example.com
LEGAL_PRIVACY_POLICY_VERSION=1.0
LEGAL_TERMS_OF_SERVICE_VERSION=1.0
LEGAL_COOKIE_POLICY_VERSION=1.0
LEGAL_GDPR_ENABLED=true
LEGAL_CCPA_ENABLED=true
LEGAL_REQUIRE_COOKIE_CONSENT=true
LEGAL_THIRD_PARTY_SERVICES=Google Analytics,Stripe,SendGrid

# --- Error Monitoring ---
# Sentry.io integration
SENTRY_DSN=your_sentry_dsn
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# --- Email Settings ---
SMTP_SERVER=smtp.example.com
SMTP_PORT=587
SMTP_USERNAME=your_smtp_username
SMTP_PASSWORD=your_smtp_password
SMTP_FROM_EMAIL=noreply@example.com
SMTP_FROM_NAME=Decision Points

# --- Feature Flags ---
FEATURE_SUBSCRIPTIONS=false
FEATURE_CREDITS=false
FEATURE_BRANDING_GENERATOR=true
FEATURE_REVENUE_SHARING=false

# --- Deployment Settings ---
# For Kubernetes/Docker deployments
KUBERNETES_NAMESPACE=decision-points
DOCKER_REGISTRY=your-registry.example.com
DOCKER_IMAGE_TAG=latest